# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# Pin to version of notebook image that includes start-singleuser.sh script
ARG DOCKER_NOTEBOOK_IMAGE
FROM $DOCKER_NOTEBOOK_IMAGE

# Use custom startup script
USER root

# ------------ PLACE FOR TESTING -----------------

WORKDIR /opt

# Download and install Orfeo toolbox OTB
# Standalone install
# COPY OTB-6.4.0-Linux64.run /opt/OTB-6.4.0-Linux64.run
RUN wget --quiet http://step.esa.int/thirdparties/snaphu/1.4.2-2/snaphu-v1.4.2_linux.zip && \
    unzip snaphu-v1.4.2_linux.zip && \
    mv snaphu-v1.4.2_linux snaphu &&\
    chmod 755 snaphu/bin/snaphu &&\
    rm -rf snaphu-v1.4.2_linux.zip

ENV PATH="/opt/snaphu/bin:${PATH}"

RUN pip install -q --no-cache-dir --upgrade pixiedust && \
    /bin/bash -c "source activate python27 && pip install -q --no-cache-dir --upgrade pixiedust requests Jinja2 pandas && source deactivate python27"

RUN cd /tmp && \
    ls && \
    git clone https://github.com/wasat/JupyTEPIDE.git && \
    cp -rf /tmp/JupyTEPIDE/GUI/res/jupyter/static/* "/opt/conda/lib/python3.6/site-packages/notebook/static" && \
    cd JupyTEPIDE && \
    cp -R notebooks /home/jovyan/ && \
    cd GUI && \
    jupyter nbextension install source_UI --user && \
    jupyter nbextension enable source_UI/main --sys-prefix && \
    mkdir -p /home/jovyan/.ipython/profile_default/startup && \
    find "/home/jovyan/.ipython/profile_default/startup" -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf && \
    cp -a /tmp/JupyTEPIDE/scripts/startup/. /home/jovyan/.ipython/profile_default/startup/ && \
    mkdir -p /opt/jupytepide/scripts && \
    cp /tmp/JupyTEPIDE/scripts/metadata.py /opt/jupytepide/scripts/metadata.py && \
    mkdir -p /home/jovyan/.jupytepide/conf/gui && \
    cp /tmp/JupyTEPIDE/GUI/source_UI/code_snippets.json /home/jovyan/.jupytepide/conf/gui/code_snippets.json && \
    cp -R /tmp/JupyTEPIDE /opt/ && \
    find /tmp -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
    # fix-permissions /home/$NB_USER && \
    # fix-permissions /opt

# ------------ END TESTING -----------------------

# Install JupyTEP IDE UI layout and enable it
RUN mkdir /home/$NB_USER/dev && \
    cd /home/$NB_USER/dev && \
    git clone -b dev --single-branch https://github.com/wasat/JupyTEPIDE.git && \
    rm -rf /home/jovyan/work/notebook_count/ && \
    fix-permissions /home/$NB_USER

RUN conda remove --force libgdal gdal sqlite fiona

# apt-get installs
RUN add-apt-repository -y ppa:ubuntugis/ppa && \
    apt-get update -qq && \
    apt-get install -y -qq htop python3-lxml libapparmor1 libcurl4-gnutls-dev libxml2-dev libssl-dev gdebi-core \
    libcairo2-dev libxt-dev git-core && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN /bin/bash -c "R -e \"install.packages('devtools', repos='http://cran.cnr.berkeley.edu/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('Rcpp', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('RcppEigen', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('ggplot2', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('Cairo', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('evaluate', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('formatR', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('highr', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('markdown', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('yaml', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('htmltools', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('knitr', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('rmarkdown', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('RColorBrewer', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('sp', repos='http://cran.cnr.berkeley.edu/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('raster', repos='http://cran.cnr.berkeley.edu/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('gstat', repos='http://cran.cnr.berkeley.edu/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('httr', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"install.packages('githubinstall', repos='http://cran.rstudio.com/', clean = TRUE, quiet = TRUE)\"" && \
    /bin/bash -c "R -e \"library(devtools)\"" && \
    /bin/bash -c "R -e \"options(unzip='internal')\"" && \
    R -e "devtools::install_git(\"https://github.com/gowusu/sebkc.git\", branch = \"master\")" && \
    wget --quiet https://download2.rstudio.org/rstudio-server-0.99.903-amd64.deb && \
    gdebi -n rstudio-server-0.99.903-amd64.deb  && \
    find /tmp -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf && \
    fix-permissions /home/$NB_USER && \
    fix-permissions $CONDA_DIR

# apt-get installs
# RUN add-apt-repository -y ppa:ubuntugis/ppa && \
#RUN apt-get update -qq && \
#    apt-get install -y -qq gdal-bin=2.1* python3-gdal sqlite && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/*
#
RUN ln -s /bin/tar /bin/gtar

RUN add-apt-repository 'deb http://mirror.ibcp.fr/pub/CRAN/bin/linux/ubuntu xenial/'
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
RUN apt-get update
RUN apt-get install -y libgdal1-dev libproj-dev libgeos-dev
RUN apt-get install -y r-base-core

RUN /bin/bash -c "R -e \"install.packages('rgdal', repos='http://cran.rstudio.com/')\""
# RUN /bin/bash -c "R -e \"devtools::install_version('rgdal', version = '1.2-7', repos='http://cran.rstudio.com/')\""

COPY spawn/docker-entrypoint.sh /srv/docker-entrypoint.sh
RUN chmod 777 /srv/docker-entrypoint.sh
ENTRYPOINT ["tini", "--", "/srv/docker-entrypoint.sh"]
CMD ["start-singleuser.sh"]

WORKDIR /home/$NB_USER
USER $NB_USER
