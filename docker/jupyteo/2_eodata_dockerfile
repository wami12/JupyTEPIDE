# Copyright (c) JupyTEP IDE Development Team.
# Distributed under the terms of the Modified BSD License.
ARG DOCKER_VER
FROM reg.jupyteo.com/geospatial-notebook:$DOCKER_VER

LABEL maintainer="Jupyteo Project <jupyteo@wasat.pl>"

USER root

# apt-get installs
RUN apt-get update -qq && \
    apt-get install -qqy --no-install-recommends --allow-unauthenticated file otb-bin python3-otb && \
    apt-get autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

ENV PYTHONPATH=/usr/lib/otb/python3:$PYTHONPATH

# Install JDK 8 Oracle
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections > /dev/null 2>&1 && \
    add-apt-repository -y ppa:webupd8team/java > /dev/null 2>&1 && \
    apt-get -qq update && \
    apt-get install -qq -y oracle-java8-installer tar && \
    apt-get install -qq -y oracle-java8-set-default && \
    apt-get autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/oracle-jdk8-installer

# Define commonly used JAVA_HOME variable
ENV JAVA_HOME /usr/lib/jvm/java-8-oracle

WORKDIR /tmp

# Add JAI and ImageIO for great speedy speed.
# A little logic that will fetch the JAI and JAI ImageIO tar file if it
# is not available locally in the resources dir
RUN if [ ! -f /tmp/resources/jai-1_1_3-lib-linux-amd64.tar.gz ]; then \
    wget --quiet http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz -P ./resources;\
    fi; \
    if [ ! -f /tmp/resources/jai_imageio-1_1-lib-linux-amd64.tar.gz ]; then \
    wget --quiet http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz -P ./resources;\
    fi; \
    mv resources/jai-1_1_3-lib-linux-amd64.tar.gz ./ && \
    mv resources/jai_imageio-1_1-lib-linux-amd64.tar.gz ./ && \
    gunzip -c --quiet jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - && \
    gunzip -c --quiet jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - && \
    mv /tmp/jai-1_1_3/lib/*.jar $JAVA_HOME/jre/lib/ext/ && \
    mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/ && \
    mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ && \
    mv /tmp/jai_imageio-1_1/lib/*.so $JAVA_HOME/jre/lib/amd64/

RUN mkdir /tmp/jupyteo
COPY ./ /tmp/jupyteo/

# Download and install ESA SNAP toolbox (with all components)
# Install and configure Snappy
# COPY esa-snap_all_unix_6_0.sh /tmp/esa-snap_all_unix_6_0.sh
RUN chmod +x /tmp/jupyteo/stuff/esa-snap_all_unix_6_0.sh && \
    /bin/bash "/tmp/jupyteo/stuff/esa-snap_all_unix_6_0.sh" -q

USER $NB_USER

RUN mkdir -p "/home/jovyan/.snap/snap-python/snappy" && \
    cp -R /tmp/jupyteo/libs/jpy-0.9.0-cp36-cp36m-linux_x86_64.whl "/home/jovyan/.snap/snap-python/snappy" && \
    cd /opt/snap/bin && \
    ./snappy-conf /opt/conda/bin/python /home/jovyan/.snap/snap-python && \
    rm -rf /home/jovyan/.snap/snap-python/snappy/testdata && \
    cp -R /home/jovyan/.snap/snap-python/snappy /opt/conda/lib/python3.6/site-packages/ && \
    rm -rf /home/jovyan/.snap/snap-python && \
    fix-permissions /home/$NB_USER && \
    fix-permissions /opt

ENV PATH="/opt/conda/bin:${PATH}"

USER root

COPY spawn/docker-entrypoint.sh /srv/docker-entrypoint.sh
RUN chmod 777 /srv/docker-entrypoint.sh && \
    find /tmp -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
ENTRYPOINT ["tini", "--", "/srv/docker-entrypoint.sh"]
CMD ["jupyterhub-singleuser"]

WORKDIR /home/$NB_USER
USER $NB_UID