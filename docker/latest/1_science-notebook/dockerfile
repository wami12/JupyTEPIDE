# Copyright (c) JupyTEP IDE Development Team.
# Distributed under the terms of the Modified BSD License.
ARG DOCKER_VER
FROM jupytepide/base-scipy-r-notebook:$DOCKER_VER

LABEL maintainer="JupyTEP IDE Project <jupytep@wasat.pl>"

USER root

# Fix sh
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# apt-get installs
#RUN add-apt-repository -y ppa:ubuntugis/ppa && \
#    add-apt-repository -y ppa:opencpu/imagemagick && \
RUN apt-get update -qq && \
    apt-get install -y -qq --no-install-recommends software-properties-common apt-utils nano mc python-autopep8 \
    htop python3-lxml libapparmor1 libcurl4-gnutls-dev libxml2-dev libssl-dev gdebi-core \
    libcairo2-dev libxt-dev git-core libmagick++-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install JDK 8 Oracle
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections > /dev/null 2>&1 && \
    add-apt-repository -y ppa:webupd8team/java > /dev/null 2>&1 && \
    apt-get -qq update && \
    apt-get install -qq -y oracle-java8-installer tar && \
    apt-get install -qq -y oracle-java8-set-default && \
    apt-get autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/oracle-jdk8-installer

# Define commonly used JAVA_HOME variable
ENV JAVA_HOME /usr/lib/jvm/java-8-oracle

WORKDIR /tmp

# Add JAI and ImageIO for great speedy speed.
# A little logic that will fetch the JAI and JAI ImageIO tar file if it
# is not available locally in the resources dir
RUN if [ ! -f /tmp/resources/jai-1_1_3-lib-linux-amd64.tar.gz ]; then \
    wget --quiet http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz -P ./resources;\
    fi; \
    if [ ! -f /tmp/resources/jai_imageio-1_1-lib-linux-amd64.tar.gz ]; then \
    wget --quiet http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz -P ./resources;\
    fi; \
    mv resources/jai-1_1_3-lib-linux-amd64.tar.gz ./ && \
    mv resources/jai_imageio-1_1-lib-linux-amd64.tar.gz ./ && \
    gunzip -c --quiet jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - && \
    gunzip -c --quiet jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - && \
    mv /tmp/jai-1_1_3/lib/*.jar $JAVA_HOME/jre/lib/ext/ && \
    mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/ && \
    mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ && \
    mv /tmp/jai_imageio-1_1/lib/*.so $JAVA_HOME/jre/lib/amd64/ && \
    find /tmp -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf

ENV PATH="/opt/conda/bin:${PATH}"

# Conda installs
RUN conda install --quiet --yes -c anaconda \
    'numpy=1.12.1*' && \
    conda clean -tipsy && \
    conda install --quiet --yes -c conda-forge \
    'ipyleaflet=0.6.5*' \
    'ipyparallel=6.2*' \
    'jupyter_contrib_nbextensions=0.5*' \
    'jupyter_nbextensions_configurator=0.4.0*' \
    'nb_conda=2.2.1*' \
    'nb_conda_kernels=2.1.0*' \
    'mpi4py=3.0.0' && \
    pip install -q --no-cache-dir --upgrade autopep8 &&\
    jupyter nbextension enable code_prettify/autopep8 --user &&\
    jupyter nbextension enable --py latex_envs --user &&\
    jupyter nbextension enable table_beautifier/main --user &&\
    conda clean -tipsy && \
    fix-permissions $CONDA_DIR

# Create a Python 2.x environment using conda including at least the ipython kernel
# and the kernda utility. Add any additional packages you want available for use
# in a Python 2 notebook to the first line here (e.g., pandas, matplotlib, etc.)
RUN conda create --quiet --yes -p $CONDA_DIR/envs/python27 python=2.7 ipython ipykernel numpy matplotlib pillow pip autopep8 kernda && \
    conda clean -tipsy && \
# Create a global kernelspec in the image and modify it so that it properly activates
# the python2 conda environment.
    $CONDA_DIR/envs/python27/bin/python -m ipykernel install && \
    /bin/bash -c "source activate python27 && kernda -o -y /opt/conda/envs/python27/share/jupyter/kernels/python2/kernel.json && source deactivate python27" && \
    conda clean -tipsy

RUN pip install --upgrade pip &&\
    pip install -q --no-cache-dir --upgrade pixiedust ipgetter && \
    /bin/bash -c "source activate python27 && pip install -q --no-cache-dir --upgrade pixiedust requests Jinja2 pandas && source deactivate python27"

# Install JupyTEP IDE UI layout and enable it
RUN cd /tmp && \
    git clone https://github.com/wasat/JupyTEPIDE.git && \
    cp -rf /tmp/JupyTEPIDE/GUI/res/jupyter/static/* "/opt/conda/lib/python3.6/site-packages/notebook/static" && \
    cp -rf /tmp/JupyTEPIDE/GUI/res/pixiedust/* "/opt/conda/lib/python3.6/site-packages/pixiedust" && \
    cp -rf /tmp/JupyTEPIDE/GUI/res/pixiedust/* "/opt/conda/envs/python27/lib/python2.7/site-packages/pixiedust" && \
    cd JupyTEPIDE && \
    cp -R notebooks /home/jovyan/ && \
    cd GUI && \
    jupyter nbextension disable source_UI/main --sys-prefix && \
    jupyter nbextension install jupytepide --user && \
    jupyter nbextension enable jupytepide/main --sys-prefix && \
    mkdir -p /home/jovyan/.ipython/profile_default/startup && \
    find "/home/jovyan/.ipython/profile_default/startup" -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf && \
    cp -a /tmp/JupyTEPIDE/scripts/startup/. /home/jovyan/.ipython/profile_default/startup/ && \
    mkdir -p /opt/jupytepide/scripts && \
    cp /tmp/JupyTEPIDE/scripts/metadata.py /opt/jupytepide/scripts/metadata.py && \
    mkdir -p /home/jovyan/.jupytepide/conf/gui && \
    cp /tmp/JupyTEPIDE/GUI/jupytepide/code_snippets.json /home/jovyan/.jupytepide/conf/gui/code_snippets.json && \
    cp -R /tmp/JupyTEPIDE /opt/ && \
    find /tmp -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf && \
    fix-permissions /home/$NB_USER && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /opt

WORKDIR /home/$NB_USER
USER $NB_USER