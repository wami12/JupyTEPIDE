version: "3"
services:
  #  jupytepide-proxy:
  #    env_file: .env
  #    image: jupyterhub/configurable-http-proxy:3.1.1
  #    container_name: jupytepide-proxy
  #    hostname: jupytepide-proxy
  #    networks:
  #    - jupyterhub-net
  #    # expose the proxy to the world
  #    ports:
  #    - "80:8000"
  #    - "443:8000"
  #    command:
  #    - configurable-http-proxy
  #    - '--error-target'
  #    - 'http://jupytepide-hub/hub/error'

  jupytepide-hub:
    # build an image with SwarmSpawner and our jupyterhub_config.py
    env_file: .env
    build:
      context: "../.."
      dockerfile: "examples/swarm/Dockerfile"
    image: jupytepide-hub
    container_name: jupytepide-hub
    # mount the docker socket
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - /etc/jupyterhub:/srv/jupyterhub
    - ./jupyterhub_config.py:/tmp/jupyterhub_config.py
    - ./run-from-compose.sh:/run-from-compose.sh
    networks:
    - jupyterhub-net
    # This is necessary to prevent the singleton hub from using its service number as its hostname
    ports:
    - "8000:8000"
    hostname: jupytepide-hub
    environment:
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      DOCKER_SPAWN_NOTEBOOK_IMAGE: ${DOCKER_SPAWN_NOTEBOOK_IMAGE}
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: ${DOCKER_NOTEBOOK_DIR}
    command: sh /run-from-compose.sh

networks:
  jupyterhub-net:
    external:
      name: jupytepide-swarm-net

#networks:
#  jupyterhub-net:
#    driver: overlay

volumes:
  db:
    external:
      name: ${DB_VOLUME_DATA}
  geoserver-data:
  postgis-db-data: